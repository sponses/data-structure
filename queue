//普通队列
class Queue{
  constructor(){
    this.queue = [];
  }
  
  //入队
  enqueue(e){
    this.queue.push(e);
  }
  
  //出队
  dequeue(){
    this.queue.shift();
  }
  
  //获取对头部元素
  getFront(){
    return this.queue[0];
  }
  
  //获取队尾元素
  getEnd(){
    return this.queue[this.queue.length - 1];
  }
  
  //获取队列长度
  getSize(){
    return this.queue.length;
  }
  
  //清空队列
  clear(){
    this.queue = [];
  }
  
  //队列是否为空
  isEmpty(){
    return !this.queue.length;
  }
  
  //输出队列
  print(){
    console.log(this.queue);
  }
  
}

 //优先队列
  class priorityQueue(){
    constructor(){
      this.priorityQueue = [];
    }
    
    //队列是否为空
    isEmpty(){
      return !this.queue.length;
    }
    
    //入栈
    enqueue(element,priority){
      let queueElement = {element,priority};
      if(this.isEmpty){
        this.priorityQueue.push(ququeElment)
      }else{
        const index = this.priorityQueue.findIndex((item)=>queueElement.priority<item.priority);
        if(index > -1){
          this.priorityQueue.splice(index,0,queueElement);
        }else{
          this.priorityQueue.push(queueElement);
        }
      }
      
      //出栈
      dequeue(){
        this.priorityQueue.shift();
      }
      
}
  
//循环队列
class LoopQueue extends Queue{
  constructor(queue){
    super(queue);
  }
  
  //获取循环队列中的索引
  getIndex(index){
    const len = this.queue.getSize();
    return index > len? (index % len) : index;
  }
  
  //查找
  find(index){
    return !this.queue.isEmpty()?this.queue[this.getIndex(index)]:null;
  }
  
}
